{"version":3,"sources":["ListCom.jsx","App.js","reportWebVitals.js","index.js"],"names":["ListCom","props","useState","line","setLine","className","onClick","style","textDecoration","text","App","item","setItem","newitem","setNewItem","type","value","placeholder","onChange","event","target","Button","prevValue","map","val","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"oQAwBeA,EApBC,SAACC,GAAW,IAAD,EACDC,oBAAS,GADR,mBAClBC,EADkB,KACZC,EADY,KAOzB,OACE,sBAAKC,UAAU,aAAf,UACE,sBAAMC,QANI,WACZF,GAAQ,IAKN,SACE,cAAC,IAAD,CAAYC,UAAU,iBAGxB,oBAAIE,MAAO,CAAEC,eAAgBL,EAAO,eAAiB,QAArD,SACGF,EAAMQ,WC2CAC,EArDH,WAAO,IAAD,EACQR,mBAAS,IADjB,mBACTS,EADS,KACHC,EADG,OAGcV,mBAAS,IAHvB,mBAGTW,EAHS,KAGAC,EAHA,KAiBhB,OACE,mCACE,qBAAKT,UAAU,WAAf,SACE,sBAAKA,UAAU,aAAf,UACE,uBAEA,6CAEA,uBAEA,uBACEU,KAAK,OACLC,MAAOL,EACPM,YAAY,eACZC,SA1BQ,SAACC,GACjBP,EAAQO,EAAMC,OAAOJ,UA4Bf,cAACK,EAAA,EAAD,CAAQhB,UAAU,SAASC,QAzBf,WAClBQ,GAAW,SAACQ,GACV,MAAM,GAAN,mBAAWA,GAAX,CAAsBX,OAGxBC,EAAQ,KAoBF,SACE,cAAC,IAAD,MAGF,uBAEA,6BACGC,EAAQU,KAAI,SAACC,EAAKC,GACjB,OAAO,cAAC,EAAD,CAAqBhB,KAAMe,GAAbC,QAIzB,+BC1CKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0f23f0f3.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst ListCom = (props) => {\n  const [line, setLine] = useState(false);\n\n  const cutIt = () => {\n    setLine(true);\n  };\n\n  return (\n    <div className=\"todo_style\">\n      <span onClick={cutIt}>\n        <DeleteIcon className=\"deleteIcon\" />\n      </span>\n\n      <li style={{ textDecoration: line ? \"line-through\" : \"none\" }}>\n        {props.text}\n      </li>\n    </div>\n  );\n};\n\nexport default ListCom;\n","import React, { useState } from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\n\nimport ListCom from \"./ListCom\";\n\nconst App = () => {\n  const [item, setItem] = useState(\"\");\n\n  const [newitem, setNewItem] = useState([]);\n\n  const itemEvent = (event) => {\n    setItem(event.target.value);\n  };\n\n  const listOfItems = () => {\n    setNewItem((prevValue) => {\n      return [...prevValue, item];\n    });\n\n    setItem(\"\");\n  };\n\n  return (\n    <>\n      <div className=\"main_div\">\n        <div className=\"center_div\">\n          <br />\n\n          <h1> ToDo List </h1>\n\n          <br />\n\n          <input\n            type=\"text\"\n            value={item}\n            placeholder=\"Add an Items\"\n            onChange={itemEvent}\n          />\n\n          <Button className=\"newBtn\" onClick={listOfItems}>\n            <AddIcon />\n          </Button>\n\n          <br />\n\n          <ol>\n            {newitem.map((val, index) => {\n              return <ListCom key={index} text={val} />;\n            })}\n          </ol>\n\n          <br />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}